{"version":3,"sources":["to-do-list/to-do-list.js","index.js"],"names":["Task","_ref","task","index","completeTask","removeTask","react_default","a","createElement","className","style","textDecoration","completed","title","background","onClick","CreateTask","_ref2","addTask","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","ToDoList","_useState3","_useState4","tasksRemaining","setTasksRemaining","_useState5","_useState6","tasks","setTasks","useEffect","filter","length","newTasks","toConsumableArray","splice","map","to_do_list_Task","key","to_do_list_CreateTask","concat","ReactDOM","render","to_do_list_to_do_list","document","getElementById"],"mappings":"uKAKMA,SAAO,SAAAC,GAA+C,IAA5CC,EAA4CD,EAA5CC,KAAMC,EAAsCF,EAAtCE,MAAOC,EAA+BH,EAA/BG,aAAcC,EAAiBJ,EAAjBI,WACzC,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVC,MAAO,CAAEC,eAAgBT,EAAKU,UAAY,eAAiB,KAE1DV,EAAKW,MACNP,EAAAC,EAAAC,cAAA,UACEC,UAAU,OACVC,MAAO,CAAEI,WAAY,IACrBC,QAAS,kBAAMX,EAAaD,KAH9B,UAOAG,EAAAC,EAAAC,cAAA,UACEC,UAAU,SACVC,MAAO,CAAEI,WAAY,IACrBC,QAAS,kBAAMV,EAAWF,KAH5B,QAUAa,EAAa,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QAAcC,EACRC,mBAAS,IADDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3BK,EAD2BH,EAAA,GACpBI,EADoBJ,EAAA,GASlC,OACEf,EAAAC,EAAAC,cAAA,QAAMkB,SAPa,SAACC,GACpBA,EAAEC,iBACGJ,IACLN,EAAQM,GACRC,EAAS,OAIPnB,EAAAC,EAAAC,cAAA,SACEqB,KAAK,OACLpB,UAAU,QACVe,MAAOA,EACPM,YAAY,iBACZC,SAAU,SAACJ,GAAD,OAAOF,EAASE,EAAEK,OAAOR,YAmD5BS,EA7CE,WAAM,IAAAC,EACuBd,mBAAS,GADhCe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GACdE,EADcD,EAAA,GACEE,EADFF,EAAA,GAAAG,EAEKlB,mBAAS,IAFdmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAEdE,EAFcD,EAAA,GAEPE,EAFOF,EAAA,GAIrBG,oBAAU,WACRL,EAAkBG,EAAMG,OAAO,SAACzC,GAAD,OAAWA,EAAKU,YAAWgC,UAG5D,IAIMvC,EAAa,SAACF,GAClB,IAAM0C,EAAQvB,OAAAwB,EAAA,EAAAxB,CAAOkB,GACrBK,EAASE,OAAO5C,EAAO,GACvBsC,EAASI,IAELzC,EAAe,SAACD,GACpB,IAAM0C,EAAQvB,OAAAwB,EAAA,EAAAxB,CAAOkB,GACrBK,EAAS1C,GAAOS,WAAY,EAC5B6B,EAASI,IAGX,OACEvC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,kBAAwC2B,EAAxC,KACA9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZ+B,EAAMQ,IAAI,SAAC9C,EAAMC,GAAP,OACTG,EAAAC,EAAAC,cAACyC,EAAD,CACE/C,KAAMA,EACNC,MAAOA,EACPC,aAAcA,EACdC,WAAYA,EACZ6C,IAAK/C,OAIXG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC2C,EAAD,CAAYjC,QA/BJ,SAACL,GACf,IAAMgC,EAAQ,GAAAO,OAAA9B,OAAAwB,EAAA,EAAAxB,CAAOkB,GAAP,CAAc,CAAE3B,QAAOD,WAAW,KAChD6B,EAASI,UCxDbQ,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAAcC,SAASC,eAAe","file":"static/js/main.18f47ae7.chunk.js","sourcesContent":["// ATTEMPT 2 WITH RESEARCH AND ASSISTANCE\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./to-do-list.css\";\n\nconst Task = ({ task, index, completeTask, removeTask }) => {\n  return (\n    <div\n      className=\"task\"\n      style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}\n    >\n      {task.title}\n      <button\n        className=\"tick\"\n        style={{ background: \"\" }}\n        onClick={() => completeTask(index)}\n      >\n        âœ“\n      </button>\n      <button\n        className=\"delete\"\n        style={{ background: \"\" }}\n        onClick={() => removeTask(index)}\n      >\n        x\n      </button>\n    </div>\n  );\n};\nconst CreateTask = ({ addTask }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTask(value);\n    setValue(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        placeholder=\"Add a new task\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </form>\n  );\n};\n\nconst ToDoList = () => {\n  const [tasksRemaining, setTasksRemaining] = useState(0);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    setTasksRemaining(tasks.filter((task) => !task.completed).length);\n  });\n\n  const addTask = (title) => {\n    const newTasks = [...tasks, { title, completed: false }];\n    setTasks(newTasks);\n  };\n  const removeTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n  const completeTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  return (\n    <body>\n      <div className=\"todo-container\">\n        <div className=\"header\">Pending Tasks ({tasksRemaining})</div>\n        <div className=\"tasks\">\n          {tasks.map((task, index) => (\n            <Task\n              task={task}\n              index={index}\n              completeTask={completeTask}\n              removeTask={removeTask}\n              key={index}\n            />\n          ))}\n        </div>\n        <div className=\"create-task\">\n          <CreateTask addTask={addTask} />\n        </div>\n      </div>\n    </body>\n  );\n};\nexport default ToDoList;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from './App';\nimport ToDoList from \"./to-do-list/to-do-list\";\nReactDOM.render(<ToDoList />, document.getElementById(\"root\"));\n"],"sourceRoot":""}